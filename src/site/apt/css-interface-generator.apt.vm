 ------
 Using the CSS Interface Generator
 ------
 Olivier Lamy
 ------
 2010-11-19

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Generate Java Interface using the CSS Interface Generator from GWT

  With version 2.1.1, you can now generate Java Interfaces from css files.
  Your css must be located in resources referenced in the Maven pom
  The css filename is used to generate the Java class Name (so use the standard camel case).
  
+--

src 
   main 
       resources 
                bar/MyCss.css 
                foo/MySite.css 

+--  
  
+--
<project>
  [...]
  <build>
    <plugins>
      [...]
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          <cssFiles>
            <cssFile>bar/MyCss.css</cssFile>
            <cssFile>foo/MySite.css</cssFile>
          </cssFiles>
        </configuration>
        <executions>
          <execution>
            <id>css-generation</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>css</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      [...]
    </plugins>
  </build>
  [...]
</project>
+--  

  The java sources will be generated by default in $\{project.build.directory\}/generated-sources/gwt .
  You change it with modifying the generateDirectory mojo parameter.

  

  
