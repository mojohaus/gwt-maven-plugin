 ------
GWT Maven Plugin Usage
 ------
 ------
 ------

Configuring Google Web Toolkit support for maven

* Translate GWT application to JavaScript

  You can use the following configuration in your pom.xml to run the GWT compiler
  when the project is built. By default, the {{{compile-mojo.html}compile}} goal is configured
  to be executed during the ''process-class'' phase.

+---+
<project>
  [...]
  <build>
    <plugins>
      [...]
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <module>com.mycompany.gwt.Module</module>
            </configuration>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      [...]
    </plugins>
  </build>
  [...]
</project>
+---+

* Generate Async interface for GWT-RPC services

  The {{{generateAsync-mojo.html}generateAsync}} goal will create a generate-sources folder an create Async interface for all
  RemoteInterface found in the project. To avoid a full scan, only Java source files that matches a
  pattern (defaults to ''**/*Service.java'') are checked.

+---+
<project>
  [...]
  <build>
    <plugins>
      [...]
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <servicePattern>**/gwt/**/*Service.java</servicePattern>
            </configuration>
            <goals>
              <goal>compile</goal>
              <goal>generateAsync</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      [...]
    </plugins>
  </build>
  [...]
</project>
+---+


* Setup hosted mode browser

  The {{{eclipse-mojo.html}eclipse}} goal can be used to create an eclipse launch configuration for executing the GWT
  module in hosted browser mode. The required native libraries are also downloaded and installed in
  the user local repository.

+---+
<project>
  [...]
  <build>
    <plugins>
      [...]
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <module>com.mycompany.gwt.Module</module>
            </configuration>
            <goals>
              <goal>compile</goal>
              <goal>eclipse</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      [...]
    </plugins>
  </build>
  [...]
</project>
+---+